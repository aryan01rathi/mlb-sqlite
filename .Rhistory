print("hello world")
print("hello ")
install.packages("tidyverse")
library(tidyverse)
setwd("C:/Users/aryan/OneDrive/Desktop/y")
list.files()
game_log <- read_csv("game_log.csv")
game_log <- read_csv("game_log.csv")
park_codes <- read_csv("park_codes.csv")
person_codes <- read_csv("person_codes.csv")
team_codes <- read_csv("team_codes.csv")
dim(game_log)
head(game_log)
colnames(game_log)
dim(park_code)
dim(park_codes)
head(park_codes)
colnames(park_codes)
print(head(game_log), width = Inf)
print(head(park_codes), width = Inf)
colnames(park_codes)
colnames(person_codes)
print(head(person_codes), width = Inf)
colnames(team_codes)
print(head(team_codes), width = Inf)
dim(game_log)
dim(park_codes)
dim(person_codes)
dim(team_codes)
library(RSQLite)
library(RSQLite)
library(DBI)
install package RSQLite
install.package RSQLite
install.packages("RSQLite")
library(RSQLite)
library(DBI)
install.packages("DBI")
library(RSQLite)
library(DBI)
conn <- dbConnect(SQLite(), "baseball_data.sqlite")
dbWriteTable(conn, "Game_log", game_log)
dbWriteTable(conn, "game_log", as.data.frame(game_log))
dbWriteTable(conn, "park_codes", as.data.frame(park_codes))
dbWriteTable(conn, "person_codes", as.data.frame(person_codes))
dbWriteTable(conn, "team_codes", as.data.frame(team_codes))
dbListTables(conn)
dbGetQuery(conn, "SELECT * FROM game_log LIMIT 5")
dbGetQuery(conn, "SELECT * FROM team_codes LIMIT 5")
dbGetQuery(conn, "SELECT * FROM team_codes LIMIT 3")
dbDisconnect(conn)
getwd()
conn <- dbConnect(SQLite(), "mlb.db")
dbWriteTable(conn, "game_log", as.data.frame(game_log))
dbWriteTable(conn, "park_codes", as.data.frame(park_codes))
dbWriteTable(conn, "person_codes", as.data.frame(person_codes))
dbWriteTable(conn, "team_codes", as.data.frame(team_codes))
dbExecute(conn, "ALTER TABLE game_log ADD COLUMN game_id TEXT;")
dbExecute(conn, "
UPDATE game_log
SET game_id = home_team_id || date || number_of_game
")
dbExecute(conn, "
UPDATE game_log
SET game_id = home_team_id || date || number_of_game
")
dbExecute(conn, "
UPDATE game_log
SET game_id = home_team || year ||
printf('%02d', month) ||
printf('%02d', day) ||
game_number
")
colnames(game_log)
library(dplyr)
dbExecute(conn, "
UPDATE game_log
SET game_id =
h_name ||
substr(date, 1, 4) ||
substr(date, 5, 2) ||
substr(date, 7, 2) ||
number_of_game
")
setwd("C:/Users/aryan/OneDrive/Desktop/y")
appearance_type <- read.csv("appearance_type.csv")
dim("appearanc_type")
dim("appearance_type")
dim(appearance_type)
colnames(apperance_type)
colnames(appearance_type)
colnames(person_codes)
dim(person_codes)
dim(person_codes)
colnames(person_codes)
dbExecute(conn,"CREATE TABLE person AS
SELECT
id AS person_id
first AS first_name
last AS last_name
FROM person_codes
")
dbExecute(conn,"CREATE TABLE person AS
SELECT
id AS person_id,
first AS first_name,
last AS last_name,
FROM person_codes
")
dbExecute(conn,"CREATE TABLE person AS
SELECT
id AS person_id,
first AS first_name,
last AS last_name
FROM person_codes
")
head(person)
dbExecute(conn, "
CREATE TABLE person (
person_id TEXT PRIMARY KEY,
first_name TEXT,
last_name TEXT
);
INSERT INTO person (person_id, first_name, last_name)
SELECT id, first, last FROM person_codes;
")
dbGetQuery(conn, "SELECT * FROM person")
dbGetQuery(conn, "SELECT * FROM person limit 10")
dbGetQuery(conn, "SELECT * FROM person_codes limit 10")
colnames(park_codes)
colnames(park_codes)
dbExecute(conn,"CREATE TABLE park (
park_id TEXT PRIMARY KEY,
name TEXT,
nickname TEXT,
city TEXT,
state TEXT,
notes TEXT
);
INSERT INTO park (park_id, name, nickname, city, state, notes)
SELECT park_id, name, aka, city, state, notes from park_codes;
")
dbListTables(conn)
dim(park)
park <- dbReadTable(conn,"park")
person <- dbReadTable(conn,"person")
dim(park)
dbExecute(conn, "INSERT INTO park (park_id, name, nickname, city, state, notes)
SELECT park_id, name, aka, city, state, notes from park_codes;
")
dim(park)
View(park)
dim(park)
colname(park)
colnames(park)
head(park)
dbGetQuery(conn, "SELECT * FROM person limit 10")
dbGetQuery(conn, "SELECT * FROM park limit 10")
dbGetQuery(conn, "SELECT * FROM park limit 10")
View(park)
View(person)
park <- dbReadTable(conn,"park")
dbExecute(conn, "ALTER TABLE person RENAME TO person_old;")
# Step 2: Create new table with person_id as PRIMARY KEY
dbExecute(conn, "
CREATE TABLE person (
person_id TEXT PRIMARY KEY,
first_name TEXT,
last_name TEXT
);
")
# Step 3: Copy data from old table to new table
dbExecute(conn, "
INSERT INTO person (person_id, first_name, last_name)
SELECT person_id, first_name, last_name FROM person_old;
")
# Step 4: Drop the old table
dbExecute(conn, "DROP TABLE person_old;")
#Creating appearance_type
appearance_type <- read.csv("appearance_type.csv", stringsAsFactors = FALSE)
str(appearance_type)
dbExecute(conn,"CREATE TABLE appearance_type(
appearance_type_id TEXT PRIMARY KEY,
name TEXT,
category TEXT
); ")
dbWriteTable(conn, "appearance_type_temp", appearance_type, overwrite = TRUE)
dbExecute(conn,"INSERT INTO appearance_type(appearance_type_id, name, category)
SELECT appearance_type_id, name, category FROM appearance_type_temp")
dbGetQuery(conn, "Select * from appearance_type limit 10")
View(game_log)
View(team_codes)
#League table Creation
dbGetQuery(conn,"Select distinct league from team_codes")
dbExecute(conn, "Create table league (
league_id TEXT PRIMARY KEY,
name TEXT
)")
dbExecute(conn, "
Insert into league (league_id, name) values
('UA', 'Union Association'),
('NL', 'National League'),
('PL', 'Players League'),
('AA', 'American Association'),
('AL', 'American League'),
('FL', 'Federal League');
")
dbGetQuery(conn, "select * from league")
